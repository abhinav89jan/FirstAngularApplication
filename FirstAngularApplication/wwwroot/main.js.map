{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/ServerService.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer/customer.component.css","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login-component/login-component.component.css","webpack:///./src/app/login-component/login-component.component.html","webpack:///./src/app/login-component/login-component.component.ts","webpack:///./src/app/product-component/Product.Model.ts","webpack:///./src/app/product-component/ProductServices.ts","webpack:///./src/app/product-component/product-component.component.html","webpack:///./src/app/product-component/product-component.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class ServerService {\r\n  constructor(private http: Http) {\r\n  }\r\n\r\n  GetServers(productId) {\r\n    return this.http.get('http://localhost:65297/api/Product/ProductById?id=' + productId);\r\n  }\r\n\r\n  GetDataList() {\r\n    return this.http.get('http://localhost:65297/api/Product/Product');\r\n  }\r\n}\r\n","module.exports = \"h2{\\r\\n    color:dodgerblue;\\r\\n}\"","module.exports = \"\\n<div><app-header></app-header></div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"col-xs-2\\\">\\n        hello\\n      </div>\\n      <div class=\\\"col-xs-10\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root', // as element\n  //selector: '[app-root]', // as attribute\n  //selector: '.app-root', // as class\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  name = '';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { ProductComponentComponent } from './product-component/product-component.component';\nimport { LoginComponentComponent } from './login-component/login-component.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ServerService } from './ServerService';\nimport { ProductServices } from './product-component/ProductServices';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductComponentComponent,\n    LoginComponentComponent,\n    CustomerComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot([\n      {\n        path: 'Login',\n        component: LoginComponentComponent\n      },\n      {\n        path: 'Product',\n        component: ProductComponentComponent\n      },\n      {\n        path: 'Customer',\n        component: CustomerComponent\n      }\n    ])\n  ],\n  providers: [ServerService, ProductServices],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  customer works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Company</a>\\r\\n    </div>\\r\\n    <div class=\\\"collapse navbar-collapse\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li><a href=\\\"#\\\" routerLink=\\\"/Login\\\">Customer</a></li>\\r\\n        <li><a href=\\\"#\\\" routerLink=\\\"/Product\\\">Product</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"p{\\r\\n    color:red;\\r\\n}\\r\\n.textInput{\\r\\n    background-color: yellow;\\r\\n}\\r\\n.textInput2{\\r\\n    background-color:greenyellow;\\r\\n}\"","module.exports = \"<p>\\n  login-component works!\\n</p>\\n<br>\\n<div class=\\\"container\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"col-xs-6\\\">Name</div>\\n        <div class=\\\"col-xs-6\\\"><input type=\\\"text\\\" [(ngModel)]='name' (input)=\\\"oninputUpdate($event)\\\" [ngClass]=\\\"{'textInput':!isClass1Visible,'textInput2':isClass1Visible}\\\"></div>\\n    </div>  \\n    <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"col-xs-6\\\">Password</div>\\n        <div class=\\\"col-xs-6\\\"><input type=\\\"text\\\" [(ngModel)]='pass' (input)=\\\"oninputUpdate($event)\\\" [ngClass]=\\\"{'textInput':isClass1Visible,'textInput2':!isClass1Visible}\\\"></div>\\n    </div>\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!isAddDisable\\\" (click)=\\\"onAddClick()\\\">Add</button>\\r\\n      <button class=\\\"btn btn-primary\\\" disabled='{{isAddDisable}}' (click)=\\\"onAddClick()\\\">demo</button>\\r\\n    </div>\\n      <div class=\\\"col-xs-12\\\">\\n        {{outResult}}\\n      </div>\\n      <div class=\\\"col-xs-12\\\" *ngIf='isOutDisable; else noOutDisable' [ngStyle]=\\\"{backgroundColor:isBackgroundColor}\\\">\\n        {{outEvent}}\\n      </div>\\n     <ng-template #noOutDisable>\\n      <p [ngStyle]=\\\"{backgroundColor:isBackgroundColor}\\\">\\n        just wait, its else verison\\n      </p>\\n     </ng-template>\\n  </div>\\n</div>\\n</div>\\n<br>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login-component.component.html', // use html page or do inline query\n//  template:`<p>\n//  login-component works!\n// </p>`,\n  styleUrls: ['./login-component.component.css']\n})\nexport class LoginComponentComponent implements OnInit {\n\n  name:string=\"\";\n  pass:string=\"\";\n  outResult:string=\"\";\n  outEvent:string=\"\";\n  isAddDisable=false;\n  isOutDisable=false;\n  isClass1Visible=false;\nisBackgroundColor=\"green\";\n\n\n\n  constructor() { \nsetTimeout(() => {\nthis.isAddDisable=true;\n}, 2000);\n\nsetTimeout(() => {\n  this.isOutDisable=true;\n  this.isBackgroundColor=\"yellow\";\n    this.isClass1Visible=true;\n  }, 10000);\n  }\n\n  ngOnInit() {\n  }\n\n  onAddClick()\n  {\nreturn this.outResult=this.name+\" is created with \"+this.pass;\n  }\n\n  oninputUpdate(event:Event)\n  {\n   return this.outEvent= \"Name length is :\"+(<HTMLInputElement>event.target).value+\" Password length is \"+(<HTMLInputElement>event.target).value;\n   //return console.log(event);\n    }\n}\n","export class ProductModel {\r\n  productId: number;\r\n  productName: string;\r\n  productDescription: string;\r\n  productCost: number;\r\n  productImage: string;\r\n\r\n  constructor(id: number, name: string, desc: string, cost: number, image: string) {\r\n    this.productId = id;\r\n    this.productName = name;\r\n    this.productDescription = desc;\r\n    this.productCost = cost;\r\n    this.productImage = image;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport 'rxjs/Rx';\r\nimport { map, filter, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ProductServices {\r\n  constructor(private http: Http) {\r\n  }\r\n\r\n  GetProductById(productId) {\r\n    return this.http.get('http://localhost:65297/api/Product/ProductById?id=' + productId).pipe(map(data => { return data.json(); }));\r\n  }\r\n\r\n  GetProductList() {\r\n    return this.http.get('http://localhost:65297/api/Product/Product').pipe(map(data => { return data.json(); }));\r\n  }\r\n}\r\n","module.exports = \"<p>\\r\\n  product Id is {{productId}} and {{productName}} is {{GetProductDetail()}}\\r\\n</p>\\r\\n<div class=\\\"containor\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      Product Id\\r\\n      <input type=\\\"text\\\" [(ngModel)]='productId'>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      Product Name\\r\\n      <input type=\\\"text\\\" [(ngModel)]='productName'>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\r\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"onGetProductById()\\\">Get</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <h2>\\r\\n      {{productStatus}}\\r\\n    </h2>\\r\\n    <h2>\\r\\n      {{productrecords}}\\r\\n    </h2>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <div *ngFor=\\\"let item of apiValues; let i= index\\\"\\r\\n           [ngStyle]=\\\"{backgroundColor: (i%2)==0?'blue':'yellow'}\\\">\\r\\n        {{i}} - {{item.productName}}- <img src=\\\"{{item.productImage}}\\\" class=\\\"img-responsive\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductModel } from 'src/app/product-component/Product.Model';\r\nimport { ProductServices } from './ProductServices';\r\nimport { Response } from '@angular/http';\r\n\r\n@Component({\r\n  selector: 'app-product-component',\r\n  templateUrl: './product-component.component.html',\r\n  //styleUrls: ['./product-component.component.css'] //when use css class\r\n  styles: [`p{\r\n    color: green;\r\n}`]\r\n})\r\nexport class ProductComponentComponent implements OnInit {\r\n  productId: number = 0;\r\n  productName: string = \"\";\r\n\r\n  pruductList: ProductModel[] = [new ProductModel(1, \"Avenger\", \"220 byke\", 96000, \"https://imgd.aeplcdn.com/640x348/bw/models/bajaj-avenger-cruise-220.jpg?20181901173402\")];\r\n  productStatus: string = \"\";\r\n  productrecords: string = \"\";\r\n  apiValues: string[] = [];\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  constructor(private productServices: ProductServices) { }\r\n\r\n  GetProductDetail() {\r\n    return this.productName + \" Byke\";\r\n  }\r\n\r\n  onSubmit() {\r\n    //this.pruductList.push(this.productName);\r\n    //this.productStatus = this.productName + \" is created succesfully\";\r\n    //return console.log(this.productStatus);\r\n  }\r\n\r\n  onGetProductById() {\r\n    this.productServices.GetProductById(this.productId).subscribe(\r\n      (response: Response) => this.productrecords = response.json().name,\r\n      (error) => console.log(error))\r\n  }\r\n\r\n  onGetProductList() {\r\n    this.productServices.GetProductList().subscribe(\r\n      (response: Response) => this.productrecords = response.json().name,\r\n      (error) => console.log(error))\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}